; ----------------------------------------------------------------
; This is a opsi-script file.
; See https://opsi.org    https://uib.de
; This code was originally created by opsi-setup-detector 4.3.2.6
; ----------------------------------------------------------------
encoding=utf8

; ---------------------------------------------------------------
comment "check if there is something to uninstall"
; ----------------------------------------------------------------
Message "Check for existing installation of " + $ProductId$ + " ..."
comment "Start the Uninstall check:"

; Variant 1:
; Use the MsiId found by the opsi-setup detector:
; set $UninstallList$ = addtolist($UninstallList$,"3.7.21011={73E1FD56-1BBB-4401-A6CD-B0C0D8C76001}")
; set $UninstallList$ = addtolist($UninstallList$,"3.7.21011={800C57D0-F34A-4755-A082-A5BB3DEF8587}")
; you may add later aditional msiids to this list
; set $msi-list$ = addtolist($msi-list$,"<version>=<GUID>")

; Variant 2:
;-----------------------------------------------------
; Finding the MsiId by the Displayname from Registry:
; Be sure that the Displayname is set correctly:
Set $DisplayName$ = 'SSHFS-Win 2021.1 Beta2 (x86)'
; escape all regex relevant chars with '\' : '\^$.|?*+()[{'
set $DisplayNameRegex$ = escapeRegexMetaChars($DisplayName$)
; '(?i)' = case insesitive ; '.*' = 0 or more of any thing
set $DisplayNameRegex$ = '(?i)'+$DisplayNameRegex$+'.*'
Set $UninstallList$ = getGuidListByDisplaynameRegex($DisplayNameRegex$)
;-----------------------------------------------------

; ---------------------------------------------------------------
comment "run the uninstallation "
; ----------------------------------------------------------------

if count($UninstallList$) int> "0"
	
	Comment "Uninstalling all found versions"
	for %uninstallEntry% in $UninstallList$ do Sub_Uninstallation_msi
	
endif

; ---------------------------------------------------------------
comment "cleanup installation directory"
; ----------------------------------------------------------------

if not(($InstallDir1$ = '') or ($InstallDir1$ = 'unknown'))
	if directoryexists($InstallDir1$)
		SleepSeconds 5
		Set $InstallDir$ = Set $InstallDir1$
		Files_uninstall
	endif
	
endif

if not(($InstallDir2$ = '') or ($InstallDir2$ = 'unknown'))
	if directoryexists($InstallDir2$)
		SleepSeconds 5
		Set $InstallDir$ = Set $InstallDir2$
		Files_uninstall
	endif
	
endif


